{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/about/about.component.ts","./src/app/admin/about/about.component.html","./src/app/admin/admin.module.ts","./src/app/admin/dashboard/dashboard.component.ts","./src/app/admin/dashboard/dashboard.component.html","./src/app/admin/my-profile/my-profile.component.ts","./src/app/admin/my-profile/my-profile.component.html","./src/app/admin/projects/projects.component.ts","./src/app/admin/projects/projects.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/can-activate-guard.service.ts","./src/app/client-location.ts","./src/app/client-locations.service.ts","./src/app/dashboard.service.ts","./src/app/jwt-interceptor.service.ts","./src/app/jwt-un-authorized-interceptor.service.ts","./src/app/login-view-model.ts","./src/app/login.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/project.ts","./src/app/projects.service.ts","./src/app/team-size-validator.directive.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { AboutComponent } from './about/about.component';\nimport {DashboardService} from \"../dashboard.service\";\nimport {ProjectsComponent} from \"./projects/projects.component\";\nimport {FormsModule} from \"@angular/forms\";\nimport { TeamSizeValidatorDirective } from '../team-size-validator.directive';\n\n\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    MyProfileComponent,\n    AboutComponent,\n    ProjectsComponent,\n    TeamSizeValidatorDirective\n    \n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    DashboardComponent, MyProfileComponent, AboutComponent, ProjectsComponent\n  ],\n  providers: [DashboardService]\n})\nexport class AdminModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from 'src/app/dashboard.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  Designation: string;\n  Username: string;\n  NoOfTeamMembers: number;\n  TotalCostOfAllProjects: number;\n  PendingTasks: number;\n  UpComingProjects: number;\n  ProjectCost: number;\n  CurrentExpenditure: number;\n  AvailableFunds: number;\n  ToDay: Date;\n\n  Clients: string[];\n  Projects: string[];\n  Years: number[]=[];\n  TeamMembersSummary=[];\n  TeamMembers = [];\n\n  constructor(private dashboardService:DashboardService)\n   {\n\n   }\n\n  ngOnInit(): void{\n    this.Designation=\"Team Leader\";\n    this.Username=\"John Smith\";\n    this.NoOfTeamMembers=67;\n    this.TotalCostOfAllProjects=240;\n    this.PendingTasks=15;\n    this.UpComingProjects= 0.2;\n    this.ProjectCost=2113507;\n    this.CurrentExpenditure=96788;\n    this.AvailableFunds=52536;\n    this.ToDay = new Date();\n\n    this.Clients = [\n      \"ABC Infotech\", \"DEF Software Solutions\", \"GHI Industries\"\n    ];\n\n    this.Projects=[\n      \"Project A\", \"Project B\", \"Project C\", \"Project D\"\n    ];\n    \n    for(var i=2019; i>2010; i--){\n      this.Years.push(i);\n    }\n\n    this.TeamMembersSummary= this.dashboardService.getTeamMemberSummary();\n\n    this.TeamMembers=[\n      {\n        Region: \"East\", Members:[\n        {Id: 1, Name:\"Ford\", Status:\"Available\"},\n        {Id: 2, Name:\"Miller\", Status:\"Available\"},\n        {Id: 3, Name:\"Jones\", Status:\"Busy\"},\n        {Id: 4, Name:\"James\", Status:\"Busy\"}\n        ]\n      },\n      {\n        Region: \"West\", Members:[\n        {Id: 1, Name:\"Ford\", Status:\"Available\"},\n        {Id: 2, Name:\"Miller\", Status:\"Busy\"},\n        {Id: 3, Name:\"Jones\", Status:\"Available\"},\n        {Id: 4, Name:\"James\", Status:\"Busy\"}\n        ]\n      },\n      {\n        Region: \"South\", Members:[\n        {Id: 1, Name:\"Ford\", Status:\"Busy\"},\n        {Id: 2, Name:\"Miller\", Status:\"Available\"},\n        {Id: 3, Name:\"Jones\", Status:\"Busy\"},\n        {Id: 4, Name:\"James\", Status:\"Available\"}\n        ]\n      },\n      {\n        Region: \"North\", Members:[\n        {Id: 1, Name:\"Ford\", Status:\"Busy\"},\n        {Id: 2, Name:\"Miller\", Status:\"Busy\"},\n        {Id: 3, Name:\"Jones\", Status:\"Available\"},\n        {Id: 4, Name:\"James\", Status:\"Available\"}\n        ]\n      }\n\n    ]\n  }\n\n  onProjectChange($event: { target: { innerHTML: any; }; }){\n    if($event.target.innerHTML == \"Project A\"){\n      this.ProjectCost= 2113507;\n      this.CurrentExpenditure = 96788;\n      this.AvailableFunds =52436;\n    }\n    else if($event.target.innerHTML == \"Project B\"){\n      this.ProjectCost= 5123507;\n      this.CurrentExpenditure = 109788;\n      this.AvailableFunds =152436;\n    }\n    else if($event.target.innerHTML == \"Project C\"){\n      this.ProjectCost= 983507;\n      this.CurrentExpenditure = 98008;\n      this.AvailableFunds =72436;\n    }\n    else if($event.target.innerHTML == \"Project D\"){\n      this.ProjectCost= 5123507;\n      this.CurrentExpenditure = 109788;\n      this.AvailableFunds =152436;\n    }\n  }\n\n}\n","\n\n<h5>Dashboard</h5>\n<h6>{{ToDay | date: \"shortDate\"}}</h6>\n<div class=\"row\">\n    <div class=\"col-lg-3 pb-3\" style=\"background-color:grey\">\n        <div class=\"row\">\n            <div class=\"col-11 text-white text-center mx-2 rounded pt-2 pv-2 font-weight-bold\"\n            style=\"background-color:gray; font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif\">{{Designation | uppercase}}</div>\n            <div class=\"col-12 text-center mt-2\">\n                <img src=\"assets/User.png\" width=\"120px\">\n            </div>\n            <div class=\"col-12 text-center pt-2 pb-2 font-weight-bold\" style=\"font-family: Tahoma\">{{Username | lowercase}}</div>\n            <div class=\"col-12 text-center pt-2 pb-2\" style=\"font-family: Arial\">Team Summary</div>\n            <div class=\"col-12 mb-3\">\n                <ul class=\"list-group\">\n                    <li class=\"list-group-item d-flex justify-content-between ailgn-items-center\">\n                        No. Of Team Members\n                        <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">{{NoOfTeamMembers}}</span>\n                    </li>\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Total Cost Of All Projects\n                        <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">${{TotalCostOfAllProjects}}k</span>\n                    </li>\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Pending Tasks\n                        <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">{{PendingTasks}}</span>\n                    </li>\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Upcoming Projects\n                        <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">{{UpComingProjects | percent}}</span>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"col-12 text-center pt2 pb-2\" style=\"font-family:Arial Narrow\">Clients</div>\n            <div class=\"col-12\">\n                <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item\" *ngFor=\"let client of Clients\"> {{client | slice: 0: 10}}</li>\n                    \n                    \n                </ul>\n            </div>\n        </div>\n       \n        \n    </div>\n    <div class=\"col-lg-6\">\n        <div class=\"row\">\n            <div class=\"col-12 pt-0 pb-2\" style=\"background-color:grey\">\n                <div class=\"row mt-2\">\n                    <div class=\"col-6 text-left\">\n                        <div class=\"dropdown\">\n                            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\">\n                                Project A\n                            </button>\n                            <div class=\"dropdown-menu\">\n                                <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let project of Projects\" onclick=\" return false\" (click)=\"onProjectChange($event)\">{{project}}</a>\n                                \n                            </div>\n                        </div>\n                        \n                    </div>\n                    <div class=\"col-6 text-right\">\n                        <div class=\"dropdown\">\n                            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\">\n                                2019\n                            </button>\n                            <div class=\"dropdown-menu\">\n                                <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let year of Years\">\n                                    <span [ngSwitch]=\"year\">\n                                        <span *ngSwitchCase=\"'2019'\" style=\"color:green\">{{year}}</span>\n                                        <span *ngSwitchCase=\"'2018'\" style=\"color:blue\">{{year}}</span>\n                                        <span *ngSwitchCase=\"'2017'\" style=\"color:red\">{{year}}</span>\n                                        <span *ngSwitchDefault style=\"color:black\">{{year}}</span>\n                                    </span>\n                                </a>\n                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-auto rounded font-weight-bold\"\n            style=\"background-color: gray; font-family: 'Arial Narrow'\">Project Briefing</div>\n            <div class=\"col-12\">\n                <table class=\"table table-borderless\">\n                    <tr>\n                        <td>Project Cost</td>\n                        <td>{{ProjectCost | currency: \"USD\"}}</td>\n                    </tr>\n                    <tr>\n                        <td>Current Expenditure</td>\n                        <td>{{CurrentExpenditure | currency: \"USD\"}}</td>\n                    </tr>\n                    <tr>\n                        <td>Available Funds</td>\n                        <td>{{AvailableFunds | currency: \"USD\"}}</td>\n                    </tr>\n                </table>\n            </div>\n            <div class=\"col-11 mix-auto mt-1 text-white text-center pt-2 pb-2 mx-2 rounded font-weight-bold\" style=\"background-color: dimgray;\n            font-family: 'Arial Narrow'\">Team Members Summary</div>\n            <div class=\"col-12\">\n                <table class=\"table\">\n                    <tr>\n                        <th>Region</th>\n                        <th>Team Members Count</th>\n                        <th>Temporarily Unavailable Members</th>\n                    </tr>\n                    <tr *ngFor=\"let teamMemberSummary of TeamMembersSummary\">\n                        <td>\n                            <b>{{teamMemberSummary.Region}}</b>\n                        </td>\n                        <td>\n                            {{teamMemberSummary.TeamMembersCount}}\n                        </td>\n                        <td>\n                            {{teamMemberSummary.TemporarilyUnavailableMembers}}\n                        </td>\n                    </tr>\n                    \n                </table>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-3\" style=\"background-color:gray\">\n        <div class=\"row\">\n            <div class=\"col-11 mix-auto mt-1 text-white text-center pt-1 pb-2 mx-2 rounded font-weight-bold\" \n            style=\"background-color: darkslategray; font-family: 'Arial Narrow'\">Team Members</div>\n            <div class=\"col-lg-12 pt-2\">\n                <div class=\"accordion\" id=\"accordion1\">\n                    <div class=\"card\" *ngFor=\"let teamMembersGroup of TeamMembers; let i = index\">\n                        \n                        \n                        \n                            <div class=\"card-header bg-secondary\" id=\"card1\">\n                                <h2 class=\"mb-O\">\n                                    <button class=\"btn btn-link text-white\" type=\"button\" data-toggle=\"collapse\" \n                                    [attr.data-target]=\"'#cardbody'+ i\">{{teamMembersGroup.Region}}</button>\n                                </h2>\n                            </div>\n                            <div [id]=\"'cardbody' + i\" class=\"collapse\" data-parent=\"#accordion1\" [ngClass]=\"(i== 0)? 'show':''\">\n                                <div class=\"card-body\">\n\n                                    <div *ngIf=\"i == 0; then firstTemplate; else secondTemplate\">\n\n                                    </div>\n\n                                    <ng-template #firstTemplate>\n                                        <div class=\"card\" *ngFor=\"let member of teamMembersGroup.Members\">\n                                            <div class=\"card-header bg-primary text-white\">#{{member.Id}} {{member.Name}}</div>\n                                            <div class=\"card-body\">{{member.Status}}</div>\n                                        </div>\n\n                                    </ng-template>\n\n                                    <ng-template #secondTemplate>\n                                        <table class=\"table\">\n                                            <thead>\n                                                <tr>\n                                                    <th>Id</th>\n                                                    <th>Name</th>\n                                                    <th>Status</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr *ngFor=\"let member of teamMembersGroup.Members\">\n                                                    <td>{{member.Id}}</td>\n                                                    <td  [style.color]=\"(member.Status == 'Busy')? 'red' : 'black'\">{{member.Name}}</td>\n                                                    <td>{{member.Status}}</td>\n                                                </tr>\n                                                \n                                                \n                                            </tbody>\n                                        </table>\n                                    </ng-template>\n\n                                    \n                                </div>\n                            </div>\n                        \n                        \n                    \n                    </div>\n\n\n                    \n\n                   \n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss']\n})\nexport class MyProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>my-profile works!</p>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {ProjectsService} from \"../../projects.service\";\nimport {Project} from 'src/app/project';\nimport { ClientLocation } from 'src/app/client-location';\nimport { ClientLocationsService } from 'src/app/client-locations.service';\nimport { NgForm } from '@angular/forms';\nimport * as $ from \"jquery\";\n\n@Component({\n  selector: 'app-projects',\n  templateUrl:'./projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n\n  projects: Project[];\n  clientLocations: ClientLocation[]=[];\n  showLoading: boolean= true;\n\n  newProject: Project = new Project();\n  editProject: Project= new Project();\n  editIndex: number = null;\n  deleteProject: Project = new Project();\n  deleteIndex: number = null;\n  searchBy: string = \"ProjectsName\";\n  searchText: string=\"\";\n\n  @ViewChild(\"newForm\") newForm: NgForm;\n  @ViewChild(\"editForm\") editForm: NgForm;\n  \n  constructor(private projectsService:ProjectsService, private clientLocationService: ClientLocationsService) \n  { }\n\n  ngOnInit(){\n    this.projectsService.getAllProjects().subscribe(\n      (response: Project[])=>{\n        this.projects= response;\n        this.showLoading = false;\n      },\n      (error)=>{\n        console.log(error);\n        alert(\"AuthenticationFailed\");\n      }\n    );\n\n    this.clientLocationService.getClientLocations().subscribe(\n      (response)=>{\n        this.clientLocations = response;\n      }\n      );\n  }\n\n  onNewClick(event){\n    this.newForm.resetForm();\n  }\n\n  onSaveClick()\n  {\n    if(this.newForm.valid)\n    {\n      this.newProject.clientLocation.clientLocationId= 0;\n      this.projectsService.insertProject(this.newProject)\n      .subscribe((response)=>{\n      // Add Project to Grid\n      var p: Project = new Project();\n      p.projectId = response.projectId;\n      p.projectName = response.projectName;\n      p.dateOfStart = response.dateOfStart;\n      p.teamSize = response.teamSize;\n      p.clientLocation = response.clientLocation;\n      p.active = response.active;\n      p.clientLocationId = response.clientLocationId;\n      p.status = response.status;\n      this.projects.push(p);\n      \n\n      //Clear New Project Dialog-TextBoxes\n      this.newProject.projectId=null;\n      this.newProject.projectName=null;\n      this.newProject.dateOfStart=null;\n      this.newProject.teamSize=null;\n      this.newProject.active = false;\n      this.newProject.clientLocationId = null;\n      this.newProject.status = null;\n\n      $(\"#newFormCancel\").trigger(\"click\");\n    }, (error)=>{\n      console.log(error);\n    });\n    }\n    \n  }\n\n  onEditClick(event, index:number)\n  {\n    this.editForm.resetForm();\n    setTimeout(()=>{\n      this.editProject.projectId = this.projects[index].projectId;\n    this.editProject.projectName = this.projects[index].projectName;\n    this.editProject.dateOfStart = this.projects[index].dateOfStart.split(\"/\").reverse().join(\"-\");\n    this.editProject.teamSize = this.projects[index].teamSize;\n    this.editProject.active = this.projects[index].active;\n    this.editProject.clientLocationId = this.projects[index].clientLocationId;\n    this.editProject.clientLocation = this.projects[index].clientLocation;\n    this.editProject.status = this.projects[index].status;\n    this.editIndex = index;\n    },100\n    );\n    \n  }\n\n  onUpdateClick()\n  {\n    if(this.editForm.valid)\n    {\n      this.projectsService.updateProject(this.editProject)\n      .subscribe((response: Project)=>{\n        var p :Project= new Project();\n        p.projectId = response.projectId;\n        p.projectName = response.projectName;\n        p.dateOfStart = response.dateOfStart;\n        p.teamSize = response.teamSize;\n        p.clientLocation = response.clientLocation;\n        p.active = response.active;\n        p.clientLocationId = response.clientLocationId;\n        p.status = response.status;\n        this.projects[this.editIndex] = p;\n  \n        this.newProject.projectId=null;\n        this.newProject.projectName=null;\n        this.newProject.dateOfStart=null;\n        this.newProject.teamSize=null;\n        this.newProject.clientLocation= null;\n        this.newProject.active = false;\n        this.newProject.status=null;\n\n        $(\"#editFormCancel\").trigger(\"click\");\n      }, (error)=>{\n        console.log(error);\n      })\n    }\n  }\n\n  onDeleteClick(event, index: number)\n  {\n    this.deleteProject.projectId = this.projects[index].projectId;\n    this.deleteProject.projectName = this.projects[index].projectName;\n    this.deleteProject.dateOfStart = this.projects[index].dateOfStart;\n    this.deleteProject.teamSize = this.projects[index].teamSize;\n    \n  }\n\n  onDeleteConfirmClick()\n  {\n    this.projectsService.deleteProject(this.deleteProject.projectId).subscribe((response)=>{\n      this.projects.splice(this.deleteIndex, 1);\n      this.deleteProject.projectId = null;\n      this.deleteProject.projectName = null;\n      this.deleteProject.dateOfStart = null;\n      this.deleteProject.teamSize = null;\n    },\n    (error)=>{\n      console.log(error);\n\n    });\n  }\n\n  onSearchClick()\n  {\n    this.projectsService.searchProjects(this.searchBy, this.searchText).subscribe(\n      (response: Project[])=>{\n        this.projects = response;\n      },\n      (error)=>\n      {\n        console.log(error);\n      })\n  }\n\n\n}\n","<h1>Projects\n    <i class=\"fa fa-circle-0-notch fa-spin\" style=\"font-size: 34px;\" *ngIf=\"showLoading\"></i>\n</h1>\n<div class=\"row\">\n    <div class=\"col-xl-9 mx-auto\">\n        <div class=\"form-group form-row\">\n            <div class=\"col-2\">\n                <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#newModal\"\n                (click)=\"onNewClick($event)\">Create Project</button>\n            </div>\n            <label for=\"drpSearchBy\" class=\"col-form-label col-3\">Search By:</label>\n            <div class=\"col-3\">\n                <select class=\"drpSearchBy\" id=\"drpSearchBy\" name=\"SearchBy\" [(ngModel)]=\"searchBy\">\n                    <option value=\"ProjectId\">Project Id</option>\n                    <option value=\"ProjectName\">Project Name</option>\n                    <option value=\"DateOfStart\">Date of Start</option>\n                    <option value=\"TeamSize\">Team Size</option>\n                </select>\n            </div>\n            <label for=\"textSearchText\" class=\"col-form-label col-3\">Search:</label>\n\n            <div class=\"col-4\">\n                <div class=\"input-group\">\n                    <input type=\"text\" class=\"form-control\" id=\"txtSearchText\" name=\"SearchText\" \n                    [(ngModel)]=\"searchText\">\n                    <div class=\"input-group-append\" (click)=\"onSearchClick()\">\n                        <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n        \n    </div>\n    \n    <div class=\"col-xl-9 mx-auto\">\n        <table class=\"table\">\n            <thead>\n                <th>Project Id</th>\n                <th>Project Name</th>\n                <th>Date of Start</th>\n                <th>Team Size</th>\n                <th>Client Location</th>\n                <th>Status</th>\n                <th>Actions</th>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let project of projects; let i = index\" [ngClass]=\"{'text-muted': !project.active}\">\n                    <td>{{project.projectId}}</td>\n                    <td>{{project.projectName}}</td>\n                    <td>{{project.dateOfStart}}</td>\n                    <td>{{project.teamSize}}</td>\n                    <td>{{project.clientLocation.clientLocationName}}</td>\n                    <td>{{project.status}}</td>\n                    <td>\n                        <button class=\"btn btn-info\" (click)=\"onEditClick($event, i)\"\n                        data-toggle=\"modal\" data-target=\"#editModal\">Edit</button>\n                        <button class=\"btn btn-info\" (click)=\"onDeleteClick($event, i)\"\n                        data-toggle=\"modal\" data-target=\"#deleteModal\">Delete</button>\n                    </td>\n                \n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n\n<!--popup-->\n\n<form #newForm=\"ngForm\" novalidate=\"novalidate\">\n    <div class=\"modal\" role=\"dialog\" id=\"newModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\" style=\"width: 700px\">\n                <div class=\"modal-header bg-primary text-white\">\n                    <div class=\"modal-title\">New Project</div>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"form- group row\">\n                        <label for=\"txtNewProjectId\" class=\"col-sm-2 col-form-label\">Project Id</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtNewProjectId\" style=\"width:100px\" class=\"form-control\" \n                            placeholder=\"Project Id\" name=\"ProjectId\" [(ngModel)]=\"newProject.projectId\" \n                            required=\"required\" pattern=\"^[0-9]*$\" #newProjectId=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':newProjectId.invalid && (newProjectId.dirty ||\n                            newProjectId.touched || \n                            newForm.submitted), 'is-valid': newProjectId.valid && \n                            (newProjectId.dirty || newProjectId.touched || newForm.submitted)}\">\n\n                            <span class=\"text-danger\" *ngIf=\"newProjectId.invalid && (newProjectId.dirty \n                            || newProjectId.touched || newForm.submitted) && newProjectId.errors?.required\">\n                            ProjectId can't be empty</span>\n\n                            <span class=\"text-danger\" *ngIf=\"newProjectId.invalid && (newProjectId.dirty \n                            || newProjectId.touched || newForm.submitted) && newProjectId.errors?.pattern\">\n                            ProjectId should contain numbers only</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtNewProjectName\" class=\"col-sm-2 col-form-label\">Project Name</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtNewProjectName\" style=\"width:100px\" class=\"form-control\" \n                            placeholder=\"Project Name\" name=\"ProjectName\" [(ngModel)]=\"newProject.projectName\"\n                            required=\"required\" minlength=\"3\"\n                            maxlength=\"30\" pattern=\"^[A-Za-z0-9 /-]*$\" #newProjectName=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':newProjectName.invalid && (newProjectName.dirty ||\n                             newProjectName.touched || \n                            newForm.submitted), 'is-valid': newProjectName.valid && \n                            (newProjectName.dirty || newProjectName.touched || newForm.submitted)}\">\n\n                            <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty \n                            || newProjectName.touched || newForm.submitted) && newProjectName.errors?.required\">\n                            ProjectName can't be empty</span>\n\n                            <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty \n                            || newProjectName.touched || newForm.submitted) && newProjectName.errors?.pattern\">\n                            ProjectName can contain alphabets, digits,dot, hyphen or space only</span>\n\n                            <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty \n                            || newProjectName.touched || newForm.submitted) && newProjectName.errors?.minlength\">\n                            ProjectName should be at least 3 characters</span>\n\n                        </div>\n                    </div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtNewDateOfStart\" class=\"col-sm-2 col-form-label\">Date Of Start</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtNewDateOfStart\" style=\"width:100px\" class=\"form-control\" \n                            placeholder=\"Date Of Start\" name=\"DateOfStart\" [(ngModel)]=\"newProject.dateOfStart\"\n                            required=\"required\"  #newDateOfStart=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':newDateOfStart.invalid && (newDateOfStart.dirty ||\n                             newDateOfStart.touched || \n                            newForm.submitted), 'is-valid': newDateOfStart.valid && \n                            (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted)}\">\n\n\n                            <span class=\"text-danger\" *ngIf=\"newDateOfStart.invalid && (newDateOfStart.dirty \n                            || newDateOfStart.touched || newForm.submitted) && newDateOfStart.errors?.required\">\n                            DateOfStart can't be empty</span>\n\n                        </div>\n                    </div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtTeamSize\" class=\"col-sm-2 col-form-label\">Team Size</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtTeamSize\" style=\"width:100px\" class=\"form-control\"\n                             placeholder=\"Team Size\" name=\"TeamSize\" [(ngModel)]=\"newProject.teamSize\"\n                             pattern=\"^[0-9]*$\" maxlength=\"7\" appTeamSizeValidator=\"5\" #newTeamSize=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':newTeamSize.invalid && (newTeamSize.dirty ||\n                            newTeamSize.touched || \n                            newForm.submitted), 'is-valid': newTeamSize.valid && \n                            (newTeamSize.dirty || newTeamSize.touched || newForm.submitted)}\">\n\n\n                            <span class=\"text-danger\" *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty \n                            || newTeamSize.touched || newForm.submitted) && newTeamSize.errors?.required\">\n                            Team number should be a number</span>\n\n                            <span class=\"text-danger\" *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty \n                            || newTeamSize.touched || newForm.submitted) && newTeamSize.errors?.divisible\">\n                            Team number should be divisible by 5</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"col-sm-4 col-form-label\"></label>\n                        <div class=\"col-sm-8\">\n                            <div class=\"form-check\">\n                                <input type=\"checkbox\" id=\"chkNewActive\" value=\"true\" class=\"form-check-input\" \n                                [(ngModel)]=\"newProject.active\" name=\"active\">\n                                <label class=\"form-check-label\" for=\"chkNewActive\">Active</label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"for-group row\">\n                        <label for=\"rbNewStatusInForce\" class=\"col-sm-4\">Status</label>\n                        <div class=\"col-sm-8\">\n\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"radio\" id=\"rbNewStatusInForce\" value=\"In Force\" \n                                class=\"form-check-input\"\n                                name=\"Status\" [(ngModel)]=\"newProject.status\" required=\"required\"\n                                 #newStatusInForce=\"ngModel\">\n                                <label for=\"rbNewStatusInForce\" class=\"form-check-label\">In Force</label>\n                            </div>\n\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"radio\" id=\"rbNewStatusSupport\" value=\"Support\"\n                                 class=\"form-check-input\"\n                                name=\"Status\" [(ngModel)]=\"newProject.status\" required=\"required\"\n                                #newStatusSupport=\"ngModel\">\n                                <label for=\"rbNewStatusSupport\" class=\"form-check-label\">Support</label>\n                            </div>\n\n                            <span class=\"text-danger\" *ngIf=\"newStatusInForce.invalid && (newStatusInForce.dirty \n                            || newStatusInForce.touched || newForm.submitted) && newStatusInForce.errors?.required\">\n                            Please select status</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"drpNewClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n                        <div class=\"col-sm-8\">\n                            <select id=\"drpNewClientLocation\" class=\"form-control\" name=\"ClientLocation\"\n                                [(ngModel)]=\"newProject.clientLocationId\"\n                                required=\"required\" pattern=\"^[0-9]*$\" #newClientLocationId=\"ngModel\" \n                                [ngClass]=\"{'is-invalid':newClientLocationId.invalid && (newClientLocationId.dirty ||\n                                newClientLocationId.touched || \n                                newForm.submitted), 'is-valid': newClientLocationId.valid && \n                                (newClientLocationId.dirty || newClientLocationId.touched || newForm.submitted)}\">\n                                <option value=\"null\">Please Select</option>\n                                <option *ngFor=\"let clientLocation of clientLocations\" \n                                [value]=\"clientLocation.clientLocationId\"\n                                {{clientLocation.clientLocation.Name}}\n                                ></option>\n                            </select>\n\n                            <span class=\"text-danger\"\n                            *ngIf=\"newClientLocationId.invalid && (newClientLocationId.dirty ||\n                            newClientLocationId.touched || newForm.submitted) && newClientLocationId.errors?.required\">\n                            Please Client Location</span>\n                        </div>\n                    </div>\n\n                </div>\n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-warning\" data-dismiss=\"modal\"\n                    id=\"newFormCancel\">Cancel</button>\n                    <button class=\"btn btn-success\"  (click)=\"onSaveClick()\">Save</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n<!--Edit Project-->\n\n<form #editForm=\"ngForm\" novalidate=\"novalidate\">\n    <div class=\"modal\" role=\"dialog\" id=\"editModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <div class=\"modal-title\">Edit Project</div>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"form- group row\">\n                        <label for=\"txtEditProjectId\" class=\"col-sm-2 col-form-label\">Project Id</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtEditProjectId\" style=\"width:100px\"\n                             class=\"form-control-plain-text\" \n                            placeholder=\"Project Id\" name=\"ProjectId\" [(ngModel)]=\"editProject.projectId\"\n                            disabled=\"disabled\"\n                            required=\"required\" pattern=\"^[0-9]*$\" #editProjectId=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':editProjectId.invalid && (editProjectId.dirty ||\n                            editProjectId.touched || \n                            editForm.submitted), 'is-valid': editProjectId.valid && \n                            (editProjectId.dirty || editProjectId.touched || editForm.submitted)}\">\n\n                            <span class=\"text-danger\" *ngIf=\"editProjectId.invalid && (editProjectId.dirty \n                            || editProjectId.touched || editForm.submitted) && editProjectId.errors?.required\">\n                            ProjectId can't be empty</span>\n\n                            <span class=\"text-danger\" *ngIf=\"editProjectId.invalid && (editProjectId.dirty \n                            || editProjectId.touched || editForm.submitted) && editProjectId.errors?.pattern\">\n                            ProjectId should contain numbers only</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtEditProjectName\" class=\"col-sm-2 col-form-label\">Project Name</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtEditProjectName\" style=\"width:100px\" class=\"form-control\" \n                            placeholder=\"Project Name\" \n                            name=\"ProjectName\" [(ngModel)]=\"editProject.projectName\"\n                            required=\"required\" minlength=\"3\"\n                            maxlength=\"30\" pattern=\"^[A-Za-z0-9 /-]*$\" #editProjectName=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':editProjectName.invalid && (editProjectName.dirty ||\n                            editProjectName.touched || \n                            editForm.submitted), 'is-valid': editProjectName.valid && \n                            (editProjectName.dirty || editProjectName.touched || editForm.submitted)}\">\n\n                            <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty \n                            || editProjectName.touched || editForm.submitted) && editProjectName.errors?.required\">\n                            ProjectName can't be empty</span>\n\n                            <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty \n                            || editProjectName.touched || editForm.submitted) && editProjectName.errors?.pattern\">\n                            ProjectName can contain alphabets, digits,dot, hyphen or space only</span>\n\n                            <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty \n                            || editProjectName.touched || editForm.submitted) && editProjectName.errors?.minlength\">\n                            ProjectName should be at least 3 characters</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtEditDateOfStart\" class=\"col-sm-2 col-form-label\">Date Of Start</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtEditDateOfStart\" style=\"width:100px\" class=\"form-control\"\n                             placeholder=\"Date Of Start\" name=\"DateOfStart\" [(ngModel)]=\"editProject.dateOfStart\"\n                             required=\"required\"  #editDateOfStart=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':editDateOfStart.invalid && (editDateOfStart.dirty ||\n                            editDateOfStart.touched || \n                            editForm.submitted), 'is-valid': editDateOfStart.valid && \n                            (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted)}\">\n\n                            <span class=\"text-danger\" *ngIf=\"editDateOfStart.invalid && (editDateOfStart.dirty \n                            || editDateOfStart.touched || editForm.submitted) && editDateOfStart.errors?.required\">\n                            DateOfStart can't be empty</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtEditTeamSize\" class=\"col-sm-2 col-form-label\">Team Size</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtEditTeamSize\" style=\"width:100px\" class=\"form-control\" \n                            placeholder=\"Team Size\" name=\"TeamSize\" [(ngModel)]=\"editProject.teamSize\"\n                            pattern=\"^[0-9]*$\" maxlength=\"7\" appTeamSizeValidator=\"5\" #editTeamSize=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':editTeamSize.invalid && (editTeamSize.dirty ||\n                            editTeamSize.touched || \n                            editForm.submitted), 'is-valid': editTeamSize.valid && \n                            (editTeamSize.dirty || editTeamSize.touched || editForm.submitted)}\">\n\n                            <span class=\"text-danger\" *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty \n                            || editTeamSize.touched || editForm.submitted) && editTeamSize.errors?.required\">\n                            Team number should be a number</span>\n\n                            <span class=\"text-danger\" *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty \n                            || editTeamSize.touched || newForm.submitted) && editTeamSize.errors?.divisible\">\n                            Team number should be divisible by 5</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"col-sm-4 col-form-label\"></label>\n                        <div class=\"col-sm-8\">\n                            <div class=\"form-check\">\n                                <input type=\"checkbox\" id=\"chkEditActive\" value=\"true\" class=\"form-check-input\" \n                                [(ngModel)]=\"editProject.active\" name=\"active\">\n                                <label class=\"form-check-label\" for=\"chkEditActive\">Active</label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"for-group row\">\n                        <label for=\"rbEditStatusInForce\" class=\"col-sm-4\">Status</label>\n                        <div class=\"col-sm-8\">\n\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"radio\" id=\"rbEditStatusInForce\" value=\"In Force\" \n                                class=\"form-check-input\"\n                                name=\"Status\" [(ngModel)]=\"editProject.status\"\n                                required=\"required\"\n                                 #editStatusInForce=\"ngModel\">\n                                <label for=\"rbEditStatusInForce\" class=\"form-check-label\">In Force</label>\n                            </div>\n\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"radio\" id=\"rbEditStatusSupport\" value=\"Support\" \n                                class=\"form-check-input\"\n                                name=\"Status\" [(ngModel)]=\"editProject.status\"\n                                required=\"required\"\n                                #editStatusSupport=\"ngModel\">\n                                <label for=\"rbEditStatusSupport\" class=\"form-check-label\">Support</label>\n                            </div>\n\n                            <span class=\"text-danger\" *ngIf=\"editStatusInForce.invalid && (editStatusInForce.dirty \n                            || editStatusInForce.touched || editForm.submitted) && editStatusInForce.errors?.required\">\n                            Please select status</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"drpEditClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n                        <div class=\"col-sm-8\">\n                            <select id=\"drpEditClientLocation\" class=\"form-control\" name=\"clientLocation\"\n                                [(ngModel)]=\"editProject.clientLocationId\"\n                                required=\"required\" pattern=\"^[0-9]*$\" #editClientLocationId=\"ngModel\" \n                                [ngClass]=\"{'is-invalid':editClientLocationId.invalid && (editClientLocationId.dirty ||\n                                editClientLocationId.touched || \n                                editForm.submitted), 'is-valid': editClientLocationId.valid && \n                                (editClientLocationId.dirty || editClientLocationId.touched || editForm.submitted)}\">\n                                <option value=\"null\">Please Select</option>\n                                <option *ngFor=\"let clientLocation of clientLocations\" \n                                [value]=\"clientLocation.clientLocationId\"\n                                {{clientLocation.clientLocation.Name}}></option>\n                            </select>\n\n                            <span class=\"text-danger\"\n                            *ngIf=\"editClientLocationId.invalid && (editClientLocationId.dirty ||\n                            editClientLocationId.touched || editForm.submitted) && editClientLocationId.errors?.required\">\n                            Please Client Location</span>\n                        </div>\n                    </div>\n\n                </div>\n                \n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"editFormCancel\">Cancel</button>\n                    <button class=\"btn btn-success\"  (click)=\"onUpdateClick()\">Update</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n\n<!--Delete Project-->\n\n<form>\n    <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <div class=\"modal-title\">Delete Project</div>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n                </div>\n\n                <div class=\"modal-body\">\n\n                    <div class=\"text-warning\">Are you sure you want to delete this Project?</div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtDeleteProjectId\" class=\"col-sm-2 col-form-label\">Project Id</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtDeleteProjectId\" style=\"width:100px\"\n                             class=\"form-control-plain-text\" \n                            placeholder=\"Project Id\" name=\"ProjectId\" [(ngModel)]=\"deleteProject.projectId\"\n                            disabled=\"disabled\">\n\n                        </div>\n                    </div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtDeleteProjectName\" class=\"col-sm-2 col-form-label\">Project Name</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtDeleteProjectName\" style=\"width:100px\" class=\"form-control\" \n                            placeholder=\"Project Name\" \n                            name=\"ProjectName\" [(ngModel)]=\"deleteProject.projectName\" disabled=\"disabled\">\n\n                        </div>\n                    </div>\n\n                    \n                </div>\n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-warning\" data-dismiss=\"modal\">Cancel</button>\n                    <button class=\"btn btn-success\"  (click)=\"onDeleteConfirmClick()\">Delete</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\nimport { AboutComponent } from './admin/about/about.component';\nimport { ProjectsComponent} from './admin/projects/projects.component';\nimport { LoginComponent } from './login/login.component';\nimport { CanActivateGuardService } from './can-activate-guard.service';\n\nconst routes: Routes = [\n  {path:\"\", redirectTo:\"login\", pathMatch:\"full\"},\n  {path: \"login\", component: LoginComponent},\n  {path:\"dashboard\", component: DashboardComponent, canActivate: [CanActivateGuardService], data: {expectedRole: \"admin\"}},\n  {path:\"about\", component: AboutComponent},\n  {path: \"projects\", component: ProjectsComponent, canActivate: [CanActivateGuardService], data: {expectedRole: \"admin\"}}\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(public loginService: LoginService, private domSanitizer : DomSanitizer){\n\n  }\n\n  onSearchClick(){\n    console.log(this.loginService.currentUserName);\n  }\n}\n","<nav class= \"navbar  bg-success navbar-dark\">\n  <a class=\"navbar-brand\" href=\"#\">\n    VehicleManagement\n  </a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mynav\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"mynav\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName !=null\">\n        <a class=\"nav-link\" routerLink=\"dashboard\">Dashboard</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"about\">About</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName !=null\">\n        <a class=\"nav-link\" routerLink=\"projects\">Projects</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName !=null\">\n        <a class=\"nav-link\" href=\"#\">{{loginService.currentUserName}}</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName !=null\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"loginService.Logout()\">Logout</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName ==null\">\n        <a class=\"nav-link\" routerLink=\"login\">Login</a>\n      </li>\n      \n      \n    </ul>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"search\"><i class=\"fa fa-search\"></i></span>\n        </div>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n      </div>\n      <button class=\"btn btn-warning my2-my-sm-o\" type=\"button\">Search</button>\n    </form>\n  </div>\n</nav>\n\n<div class=\"container-fluid\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {JwtModule} from \"@auth0/angular-jwt\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdminModule } from './admin/admin.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { JwtInterceptorService } from './jwt-interceptor.service';\nimport { JwtUnAuthorizedInterceptorService } from './jwt-un-authorized-interceptor.service';\nimport { LoginComponent } from './login/login.component';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    \n    \n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AdminModule,\n    HttpClientModule,\n    FormsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter:()=>{\n          return (sessionStorage.getItem(\"currentUser\")?JSON.parse(sessionStorage.getItem(\"currentUser\")).token : null)\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptorService,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS, \n      useClass: JwtUnAuthorizedInterceptorService,\n      multi:true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivateGuardService implements CanActivate{\n\n  constructor(private loginService : LoginService, private router:Router, private jwtHelperService: JwtHelperService)\n   { \n\n   }\n\n  canActivate(route:ActivatedRouteSnapshot): boolean{\n    var token = sessionStorage.getItem(\"currentUser\")?JSON.parse(sessionStorage.getItem(\"currentUser\")).token : null;\n    if (this.loginService.isAuthenticated() && this.jwtHelperService.decodeToken(token).role==route.data.expectedRole){\n      return true;\n    }\n    else{\n      this.router.navigate([\"login\"]);\n      return false;\n    }\n  }\n}\n","export class ClientLocation {\n\n    clientLocationId:number;\n    clientLocationName:string;\n\n    constructor(){\n        this.clientLocationId = null;\n        this.clientLocationName = null;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ClientLocation } from './client-location';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientLocationsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getClientLocations():Observable<ClientLocation[]>{\n    return this.httpClient.get<ClientLocation[]>(\"/api/clientlocations\", {responseType: \"json\"});\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DashboardService {\n\n  getTeamMemberSummary():any[]\n  {\n    var TeamMembersSummary=[\n      {Region: \"East\", TeamMembersCount:20, TemporarilyUnavailableMembers: 4},\n      {Region: \"West\", TeamMembersCount:15, TemporarilyUnavailableMembers: 8},\n      {Region: \"South\", TeamMembersCount:17, TemporarilyUnavailableMembers: 1},\n      {Region: \"North\", TeamMembersCount:15, TemporarilyUnavailableMembers: 6}\n    ];\n    return TeamMembersSummary;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptorService implements HttpInterceptor {\n\n  constructor() { }\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n  {\n    var currentUser = {token:\"\"};\n    if(sessionStorage.currentUser !=null){\n      currentUser= JSON.parse(sessionStorage.currentUser);\n      }\n    request = request.clone({\n      setHeaders:{\n        Authorization: \"Bearer\" + currentUser.token\n      }\n    });\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpEventType, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtUnAuthorizedInterceptorService implements HttpInterceptor{\n\n  constructor() { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n  {\n    return next.handle(request).pipe(tap(\n      (event: HttpEvent<any>)=>\n      {\n        if(event instanceof HttpResponse)\n        {\n\n        }\n      },\n\n      (error : any)=>\n      {\n        if (error instanceof HttpErrorResponse)\n        {\n          if(error.status == 401){\n            console.log(error);\n            alert(\"401 UnAuthorized\");\n          }\n        }\n      }\n    ));\n\n  }\n}\n","export class LoginViewModel {\n    UserName: string;\n    Password: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpBackend } from '@angular/common/http';\nimport { LoginViewModel } from './login-view-model';\nimport { Observable } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {JwtHelperService} from \"@auth0/angular-jwt\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private httpClient : HttpClient;\n  constructor(private httpBackend: HttpBackend, private jwtHelperService : JwtHelperService) \n  {\n\n  }\n  currentUserName: string = null;\n\n  public Login(loginViewModel: LoginViewModel): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/authenticate\", loginViewModel, {responseType: \"json\", observe:\"response\"})\n    .pipe(map(response =>{\n      if (response){\n        this.currentUserName = response.body.UserName;\n        sessionStorage.currentUser = JSON.stringify(response.body);\n        sessionStorage.XSRFRequestToken = response.headers.get(\"XSRF-REQUEST-TOKEN\")\n      }\n      return response.body;\n    }))\n  }\n\n  public Logout(){\n    sessionStorage.removeItem(\"currentUser\");\n    this.currentUserName = null;\n  }\n\n  public isAuthenticated(): boolean{\n    var token = sessionStorage.getItem(\"currentUser\")?JSON.parse(sessionStorage.getItem(\"currentUser\")).token : null;\n    if(this.jwtHelperService.isTokenExpired())\n    {\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginViewModel } from '../login-view-model';\nimport { LoginService } from '../login.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginViewModel: LoginViewModel = new LoginViewModel();\n  loginError: string=\"\";\n\n  constructor(public loginService: LoginService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginClick(event){\n    this.loginService.Login(this.loginViewModel).subscribe(\n      (response)=>{\n        this.router.navigateByUrl(\"/dashboard\");\n      },\n      (error)=>{\n        console.log(error);\n        this.loginError = \"Invalid Username or Password\";\n      },\n    );\n  }\n\n}\n","<form>\n    <div class=\"row\">\n        <div class=\"col-lg-6 col-xl-5 col-md-9 mx-auto\">\n            <div class=\"card mt-4\">\n                <div class=\"card-header bg-secondary text-white\">\n                    <h3>Login</h3>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"form-group form-row\">\n                        <label for=\"UserName\" class=\"col-md-4 col-form-label\">Username</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Username\"\n                             [(ngModel)]=\"loginViewModel.UserName\" name=\"UserName\" autofocus=\"autofocus\">\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"Password\" class=\"col-md-4 col-form-label\">Password</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"password\" class=\"form-control\" placeholder=\"Password\"\n                             [(ngModel)]=\"loginViewModel.Password\" name=\"Password\" >\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer text-right\">\n                    <span class=\"text-danger\">{{loginError}}&nbsp;</span>\n                    <button class=\"btn btn-primary\" (click)=\"onLoginClick($event)\">Login</button>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</form>>\n","import { ClientLocation } from './client-location';\n\nexport class Project \n{\n    projectId: number;\n    projectName: string;\n    dateOfStart: string;\n    teamSize: number;\n    active:boolean;\n    status: string;\n    clientLocationId : number;\n    clientLocation: ClientLocation;\n\n    constructor()\n    {\n        this.projectId=0;\n        this.projectName=null;\n        this.dateOfStart=null;\n        this.teamSize=0;\n        this.active = true;\n        this.status = null;\n        this.clientLocationId = null;\n        this.clientLocation = new ClientLocation();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { Project } from './project';\nimport { map } from \"rxjs/operators\";\nimport { Session } from 'protractor';\nimport { request } from 'http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n\n  constructor(private httpClient: HttpClient) \n  {\n\n   }\n\n   getAllProjects():Observable<Project[]>\n   {\n    \n     \n\n\n     return this.httpClient.get<Project[]>(\"/api/projects\", {responseType:\"json\"})\n     .pipe(map(\n       (data: Project[])=>{\n        for(let i = 0; i < data.length; i++){\n          //data[i].teamSize = data[i].teamSize * 100;\n        }\n        return data;\n      }\n      ));\n   }\n\n   insertProject(newProject : Project) : Observable<Project>{\n     return this.httpClient.post<Project>(\"/api/projects\", newProject, {responseType:\"json\"});\n   }\n\n   updateProject(existingProject : Project) : Observable<Project>{\n    return this.httpClient.put<Project>(\"/api/projects\", existingProject, {responseType:\"json\"});\n  }\n\n   deleteProject(ProjectId : number) : Observable<string>{\n    return this.httpClient.delete<string>(\"/api/projects?ProjectId=\" + ProjectId);\n  }\n\n  searchProjects(searchBy: string, searchText: string):Observable<Project[]>\n   {\n     return this.httpClient.get<Project[]>(\"/api/projects/search/\" + searchBy +\"/\" + searchText, {responseType:\"json\"});\n   }\n}\n","import { Directive, Input } from '@angular/core';\nimport { Validator, AbstractControl, ValidationErrors, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[appTeamSizeValidator]',\n  providers: [{provide: NG_VALIDATORS, useExisting: TeamSizeValidatorDirective, multi: true}]\n})\nexport class TeamSizeValidatorDirective implements Validator {\n\n  constructor() { }\n\n  @Input(\"appTeamSizeValidator\") n:number;\n  validate(control: AbstractControl):ValidationErrors | null\n  {\n    let currentValue=control.value;\n    let isValid = currentValue % this.n == 0;\n    if(isValid){\n      return null;\n    }\n    else{\n      return {divisible: {valid:false}};\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}