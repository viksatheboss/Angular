{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/about/about.component.ts","webpack:///src/app/admin/about/about.component.html","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/dashboard/dashboard.component.ts","webpack:///src/app/admin/dashboard/dashboard.component.html","webpack:///src/app/admin/my-profile/my-profile.component.ts","webpack:///src/app/admin/my-profile/my-profile.component.html","webpack:///src/app/admin/projects/projects.component.ts","webpack:///src/app/admin/projects/projects.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/can-activate-guard.service.ts","webpack:///src/app/client-location.ts","webpack:///src/app/client-locations.service.ts","webpack:///src/app/dashboard.service.ts","webpack:///src/app/jwt-interceptor.service.ts","webpack:///src/app/jwt-un-authorized-interceptor.service.ts","webpack:///src/app/login-view-model.ts","webpack:///src/app/login.service.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/project.ts","webpack:///src/app/projects.service.ts","webpack:///src/app/team-size-validator.directive.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","AdminModule","declarations","imports","providers","DashboardComponent","dashboardService","Years","TeamMembersSummary","TeamMembers","Designation","Username","NoOfTeamMembers","TotalCostOfAllProjects","PendingTasks","UpComingProjects","ProjectCost","CurrentExpenditure","AvailableFunds","ToDay","Date","Clients","Projects","i","push","getTeamMemberSummary","Region","Members","Id","Name","Status","$event","target","innerHTML","MyProfileComponent","ProjectsComponent","projectsService","clientLocationService","clientLocations","showLoading","newProject","editProject","editIndex","deleteProject","deleteIndex","searchBy","searchText","getAllProjects","subscribe","response","projects","error","console","log","alert","getClientLocations","event","newForm","resetForm","valid","clientLocation","clientLocationId","insertProject","p","projectId","projectName","dateOfStart","teamSize","active","status","trigger","index","editForm","setTimeout","split","reverse","join","updateProject","splice","searchProjects","onNewClick","onSearchClick","onSaveClick","onUpdateClick","onDeleteConfirmClick","routes","path","redirectTo","pathMatch","component","canActivate","data","expectedRole","AppRoutingModule","forRoot","useHash","loginService","AppComponent","domSanitizer","currentUserName","AppModule","provide","useClass","multi","config","tokenGetter","sessionStorage","getItem","JSON","parse","token","bootstrap","CanActivateGuardService","router","jwtHelperService","route","isAuthenticated","decodeToken","role","navigate","providedIn","ClientLocation","clientLocationName","ClientLocationsService","httpClient","get","responseType","DashboardService","TeamMembersCount","TemporarilyUnavailableMembers","JwtInterceptorService","request","next","currentUser","clone","setHeaders","Authorization","handle","JwtUnAuthorizedInterceptorService","pipe","LoginViewModel","LoginService","httpBackend","loginViewModel","post","observe","body","UserName","stringify","XSRFRequestToken","headers","removeItem","isTokenExpired","LoginComponent","loginError","Login","navigateByUrl","onLoginClick","Project","ProjectsService","length","existingProject","put","ProjectId","TeamSizeValidatorDirective","control","currentValue","value","isValid","n","divisible","useExisting","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { AboutComponent } from './about/about.component';\nimport {DashboardService} from \"../dashboard.service\";\nimport {ProjectsComponent} from \"./projects/projects.component\";\nimport {FormsModule} from \"@angular/forms\";\nimport { TeamSizeValidatorDirective } from '../team-size-validator.directive';\n\n\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    MyProfileComponent,\n    AboutComponent,\n    ProjectsComponent,\n    TeamSizeValidatorDirective\n    \n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    DashboardComponent, MyProfileComponent, AboutComponent, ProjectsComponent\n  ],\n  providers: [DashboardService]\n})\nexport class AdminModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from 'src/app/dashboard.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  Designation: string;\n  Username: string;\n  NoOfTeamMembers: number;\n  TotalCostOfAllProjects: number;\n  PendingTasks: number;\n  UpComingProjects: number;\n  ProjectCost: number;\n  CurrentExpenditure: number;\n  AvailableFunds: number;\n  ToDay: Date;\n\n  Clients: string[];\n  Projects: string[];\n  Years: number[]=[];\n  TeamMembersSummary=[];\n  TeamMembers = [];\n\n  constructor(private dashboardService:DashboardService)\n   {\n\n   }\n\n  ngOnInit(): void{\n    this.Designation=\"Team Leader\";\n    this.Username=\"John Smith\";\n    this.NoOfTeamMembers=67;\n    this.TotalCostOfAllProjects=240;\n    this.PendingTasks=15;\n    this.UpComingProjects= 0.2;\n    this.ProjectCost=2113507;\n    this.CurrentExpenditure=96788;\n    this.AvailableFunds=52536;\n    this.ToDay = new Date();\n\n    this.Clients = [\n      \"ABC Infotech\", \"DEF Software Solutions\", \"GHI Industries\"\n    ];\n\n    this.Projects=[\n      \"Project A\", \"Project B\", \"Project C\", \"Project D\"\n    ];\n    \n    for(var i=2019; i>2010; i--){\n      this.Years.push(i);\n    }\n\n    this.TeamMembersSummary= this.dashboardService.getTeamMemberSummary();\n\n    this.TeamMembers=[\n      {\n        Region: \"East\", Members:[\n        {Id: 1, Name:\"Ford\", Status:\"Available\"},\n        {Id: 2, Name:\"Miller\", Status:\"Available\"},\n        {Id: 3, Name:\"Jones\", Status:\"Busy\"},\n        {Id: 4, Name:\"James\", Status:\"Busy\"}\n        ]\n      },\n      {\n        Region: \"West\", Members:[\n        {Id: 1, Name:\"Ford\", Status:\"Available\"},\n        {Id: 2, Name:\"Miller\", Status:\"Busy\"},\n        {Id: 3, Name:\"Jones\", Status:\"Available\"},\n        {Id: 4, Name:\"James\", Status:\"Busy\"}\n        ]\n      },\n      {\n        Region: \"South\", Members:[\n        {Id: 1, Name:\"Ford\", Status:\"Busy\"},\n        {Id: 2, Name:\"Miller\", Status:\"Available\"},\n        {Id: 3, Name:\"Jones\", Status:\"Busy\"},\n        {Id: 4, Name:\"James\", Status:\"Available\"}\n        ]\n      },\n      {\n        Region: \"North\", Members:[\n        {Id: 1, Name:\"Ford\", Status:\"Busy\"},\n        {Id: 2, Name:\"Miller\", Status:\"Busy\"},\n        {Id: 3, Name:\"Jones\", Status:\"Available\"},\n        {Id: 4, Name:\"James\", Status:\"Available\"}\n        ]\n      }\n\n    ]\n  }\n\n  onProjectChange($event: { target: { innerHTML: any; }; }){\n    if($event.target.innerHTML == \"Project A\"){\n      this.ProjectCost= 2113507;\n      this.CurrentExpenditure = 96788;\n      this.AvailableFunds =52436;\n    }\n    else if($event.target.innerHTML == \"Project B\"){\n      this.ProjectCost= 5123507;\n      this.CurrentExpenditure = 109788;\n      this.AvailableFunds =152436;\n    }\n    else if($event.target.innerHTML == \"Project C\"){\n      this.ProjectCost= 983507;\n      this.CurrentExpenditure = 98008;\n      this.AvailableFunds =72436;\n    }\n    else if($event.target.innerHTML == \"Project D\"){\n      this.ProjectCost= 5123507;\n      this.CurrentExpenditure = 109788;\n      this.AvailableFunds =152436;\n    }\n  }\n\n}\n","\n\n<h5>Dashboard</h5>\n<h6>{{ToDay | date: \"shortDate\"}}</h6>\n<div class=\"row\">\n    <div class=\"col-lg-3 pb-3\" style=\"background-color:grey\">\n        <div class=\"row\">\n            <div class=\"col-11 text-white text-center mx-2 rounded pt-2 pv-2 font-weight-bold\"\n            style=\"background-color:gray; font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif\">{{Designation | uppercase}}</div>\n            <div class=\"col-12 text-center mt-2\">\n                <img src=\"assets/User.png\" width=\"120px\">\n            </div>\n            <div class=\"col-12 text-center pt-2 pb-2 font-weight-bold\" style=\"font-family: Tahoma\">{{Username | lowercase}}</div>\n            <div class=\"col-12 text-center pt-2 pb-2\" style=\"font-family: Arial\">Team Summary</div>\n            <div class=\"col-12 mb-3\">\n                <ul class=\"list-group\">\n                    <li class=\"list-group-item d-flex justify-content-between ailgn-items-center\">\n                        No. Of Team Members\n                        <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">{{NoOfTeamMembers}}</span>\n                    </li>\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Total Cost Of All Projects\n                        <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">${{TotalCostOfAllProjects}}k</span>\n                    </li>\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Pending Tasks\n                        <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">{{PendingTasks}}</span>\n                    </li>\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Upcoming Projects\n                        <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">{{UpComingProjects | percent}}</span>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"col-12 text-center pt2 pb-2\" style=\"font-family:Arial Narrow\">Clients</div>\n            <div class=\"col-12\">\n                <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item\" *ngFor=\"let client of Clients\"> {{client | slice: 0: 10}}</li>\n                    \n                    \n                </ul>\n            </div>\n        </div>\n       \n        \n    </div>\n    <div class=\"col-lg-6\">\n        <div class=\"row\">\n            <div class=\"col-12 pt-0 pb-2\" style=\"background-color:grey\">\n                <div class=\"row mt-2\">\n                    <div class=\"col-6 text-left\">\n                        <div class=\"dropdown\">\n                            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\">\n                                Project A\n                            </button>\n                            <div class=\"dropdown-menu\">\n                                <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let project of Projects\" onclick=\" return false\" (click)=\"onProjectChange($event)\">{{project}}</a>\n                                \n                            </div>\n                        </div>\n                        \n                    </div>\n                    <div class=\"col-6 text-right\">\n                        <div class=\"dropdown\">\n                            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\">\n                                2019\n                            </button>\n                            <div class=\"dropdown-menu\">\n                                <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let year of Years\">\n                                    <span [ngSwitch]=\"year\">\n                                        <span *ngSwitchCase=\"'2019'\" style=\"color:green\">{{year}}</span>\n                                        <span *ngSwitchCase=\"'2018'\" style=\"color:blue\">{{year}}</span>\n                                        <span *ngSwitchCase=\"'2017'\" style=\"color:red\">{{year}}</span>\n                                        <span *ngSwitchDefault style=\"color:black\">{{year}}</span>\n                                    </span>\n                                </a>\n                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-auto rounded font-weight-bold\"\n            style=\"background-color: gray; font-family: 'Arial Narrow'\">Project Briefing</div>\n            <div class=\"col-12\">\n                <table class=\"table table-borderless\">\n                    <tr>\n                        <td>Project Cost</td>\n                        <td>{{ProjectCost | currency: \"USD\"}}</td>\n                    </tr>\n                    <tr>\n                        <td>Current Expenditure</td>\n                        <td>{{CurrentExpenditure | currency: \"USD\"}}</td>\n                    </tr>\n                    <tr>\n                        <td>Available Funds</td>\n                        <td>{{AvailableFunds | currency: \"USD\"}}</td>\n                    </tr>\n                </table>\n            </div>\n            <div class=\"col-11 mix-auto mt-1 text-white text-center pt-2 pb-2 mx-2 rounded font-weight-bold\" style=\"background-color: dimgray;\n            font-family: 'Arial Narrow'\">Team Members Summary</div>\n            <div class=\"col-12\">\n                <table class=\"table\">\n                    <tr>\n                        <th>Region</th>\n                        <th>Team Members Count</th>\n                        <th>Temporarily Unavailable Members</th>\n                    </tr>\n                    <tr *ngFor=\"let teamMemberSummary of TeamMembersSummary\">\n                        <td>\n                            <b>{{teamMemberSummary.Region}}</b>\n                        </td>\n                        <td>\n                            {{teamMemberSummary.TeamMembersCount}}\n                        </td>\n                        <td>\n                            {{teamMemberSummary.TemporarilyUnavailableMembers}}\n                        </td>\n                    </tr>\n                    \n                </table>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-3\" style=\"background-color:gray\">\n        <div class=\"row\">\n            <div class=\"col-11 mix-auto mt-1 text-white text-center pt-1 pb-2 mx-2 rounded font-weight-bold\" \n            style=\"background-color: darkslategray; font-family: 'Arial Narrow'\">Team Members</div>\n            <div class=\"col-lg-12 pt-2\">\n                <div class=\"accordion\" id=\"accordion1\">\n                    <div class=\"card\" *ngFor=\"let teamMembersGroup of TeamMembers; let i = index\">\n                        \n                        \n                        \n                            <div class=\"card-header bg-secondary\" id=\"card1\">\n                                <h2 class=\"mb-O\">\n                                    <button class=\"btn btn-link text-white\" type=\"button\" data-toggle=\"collapse\" \n                                    [attr.data-target]=\"'#cardbody'+ i\">{{teamMembersGroup.Region}}</button>\n                                </h2>\n                            </div>\n                            <div [id]=\"'cardbody' + i\" class=\"collapse\" data-parent=\"#accordion1\" [ngClass]=\"(i== 0)? 'show':''\">\n                                <div class=\"card-body\">\n\n                                    <div *ngIf=\"i == 0; then firstTemplate; else secondTemplate\">\n\n                                    </div>\n\n                                    <ng-template #firstTemplate>\n                                        <div class=\"card\" *ngFor=\"let member of teamMembersGroup.Members\">\n                                            <div class=\"card-header bg-primary text-white\">#{{member.Id}} {{member.Name}}</div>\n                                            <div class=\"card-body\">{{member.Status}}</div>\n                                        </div>\n\n                                    </ng-template>\n\n                                    <ng-template #secondTemplate>\n                                        <table class=\"table\">\n                                            <thead>\n                                                <tr>\n                                                    <th>Id</th>\n                                                    <th>Name</th>\n                                                    <th>Status</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr *ngFor=\"let member of teamMembersGroup.Members\">\n                                                    <td>{{member.Id}}</td>\n                                                    <td  [style.color]=\"(member.Status == 'Busy')? 'red' : 'black'\">{{member.Name}}</td>\n                                                    <td>{{member.Status}}</td>\n                                                </tr>\n                                                \n                                                \n                                            </tbody>\n                                        </table>\n                                    </ng-template>\n\n                                    \n                                </div>\n                            </div>\n                        \n                        \n                    \n                    </div>\n\n\n                    \n\n                   \n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss']\n})\nexport class MyProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>my-profile works!</p>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {ProjectsService} from \"../../projects.service\";\nimport {Project} from 'src/app/project';\nimport { ClientLocation } from 'src/app/client-location';\nimport { ClientLocationsService } from 'src/app/client-locations.service';\nimport { NgForm } from '@angular/forms';\nimport * as $ from \"jquery\";\n\n@Component({\n  selector: 'app-projects',\n  templateUrl:'./projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n\n  projects: Project[];\n  clientLocations: ClientLocation[]=[];\n  showLoading: boolean= true;\n\n  newProject: Project = new Project();\n  editProject: Project= new Project();\n  editIndex: number = null;\n  deleteProject: Project = new Project();\n  deleteIndex: number = null;\n  searchBy: string = \"ProjectsName\";\n  searchText: string=\"\";\n\n  @ViewChild(\"newForm\") newForm: NgForm;\n  @ViewChild(\"editForm\") editForm: NgForm;\n  \n  constructor(private projectsService:ProjectsService, private clientLocationService: ClientLocationsService) \n  { }\n\n  ngOnInit(){\n    this.projectsService.getAllProjects().subscribe(\n      (response: Project[])=>{\n        this.projects= response;\n        this.showLoading = false;\n      },\n      (error)=>{\n        console.log(error);\n        alert(\"AuthenticationFailed\");\n      }\n    );\n\n    this.clientLocationService.getClientLocations().subscribe(\n      (response)=>{\n        this.clientLocations = response;\n      }\n      );\n  }\n\n  onNewClick(event){\n    this.newForm.resetForm();\n  }\n\n  onSaveClick()\n  {\n    if(this.newForm.valid)\n    {\n      this.newProject.clientLocation.clientLocationId= 0;\n      this.projectsService.insertProject(this.newProject)\n      .subscribe((response)=>{\n      // Add Project to Grid\n      var p: Project = new Project();\n      p.projectId = response.projectId;\n      p.projectName = response.projectName;\n      p.dateOfStart = response.dateOfStart;\n      p.teamSize = response.teamSize;\n      p.clientLocation = response.clientLocation;\n      p.active = response.active;\n      p.clientLocationId = response.clientLocationId;\n      p.status = response.status;\n      this.projects.push(p);\n      \n\n      //Clear New Project Dialog-TextBoxes\n      this.newProject.projectId=null;\n      this.newProject.projectName=null;\n      this.newProject.dateOfStart=null;\n      this.newProject.teamSize=null;\n      this.newProject.active = false;\n      this.newProject.clientLocationId = null;\n      this.newProject.status = null;\n\n      $(\"#newFormCancel\").trigger(\"click\");\n    }, (error)=>{\n      console.log(error);\n    });\n    }\n    \n  }\n\n  onEditClick(event, index:number)\n  {\n    this.editForm.resetForm();\n    setTimeout(()=>{\n      this.editProject.projectId = this.projects[index].projectId;\n    this.editProject.projectName = this.projects[index].projectName;\n    this.editProject.dateOfStart = this.projects[index].dateOfStart.split(\"/\").reverse().join(\"-\");\n    this.editProject.teamSize = this.projects[index].teamSize;\n    this.editProject.active = this.projects[index].active;\n    this.editProject.clientLocationId = this.projects[index].clientLocationId;\n    this.editProject.clientLocation = this.projects[index].clientLocation;\n    this.editProject.status = this.projects[index].status;\n    this.editIndex = index;\n    },100\n    );\n    \n  }\n\n  onUpdateClick()\n  {\n    if(this.editForm.valid)\n    {\n      this.projectsService.updateProject(this.editProject)\n      .subscribe((response: Project)=>{\n        var p :Project= new Project();\n        p.projectId = response.projectId;\n        p.projectName = response.projectName;\n        p.dateOfStart = response.dateOfStart;\n        p.teamSize = response.teamSize;\n        p.clientLocation = response.clientLocation;\n        p.active = response.active;\n        p.clientLocationId = response.clientLocationId;\n        p.status = response.status;\n        this.projects[this.editIndex] = p;\n  \n        this.newProject.projectId=null;\n        this.newProject.projectName=null;\n        this.newProject.dateOfStart=null;\n        this.newProject.teamSize=null;\n        this.newProject.clientLocation= null;\n        this.newProject.active = false;\n        this.newProject.status=null;\n\n        $(\"#editFormCancel\").trigger(\"click\");\n      }, (error)=>{\n        console.log(error);\n      })\n    }\n  }\n\n  onDeleteClick(event, index: number)\n  {\n    this.deleteProject.projectId = this.projects[index].projectId;\n    this.deleteProject.projectName = this.projects[index].projectName;\n    this.deleteProject.dateOfStart = this.projects[index].dateOfStart;\n    this.deleteProject.teamSize = this.projects[index].teamSize;\n    \n  }\n\n  onDeleteConfirmClick()\n  {\n    this.projectsService.deleteProject(this.deleteProject.projectId).subscribe((response)=>{\n      this.projects.splice(this.deleteIndex, 1);\n      this.deleteProject.projectId = null;\n      this.deleteProject.projectName = null;\n      this.deleteProject.dateOfStart = null;\n      this.deleteProject.teamSize = null;\n    },\n    (error)=>{\n      console.log(error);\n\n    });\n  }\n\n  onSearchClick()\n  {\n    this.projectsService.searchProjects(this.searchBy, this.searchText).subscribe(\n      (response: Project[])=>{\n        this.projects = response;\n      },\n      (error)=>\n      {\n        console.log(error);\n      })\n  }\n\n\n}\n","<h1>Projects\n    <i class=\"fa fa-circle-0-notch fa-spin\" style=\"font-size: 34px;\" *ngIf=\"showLoading\"></i>\n</h1>\n<div class=\"row\">\n    <div class=\"col-xl-9 mx-auto\">\n        <div class=\"form-group form-row\">\n            <div class=\"col-2\">\n                <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#newModal\"\n                (click)=\"onNewClick($event)\">Create Project</button>\n            </div>\n            <label for=\"drpSearchBy\" class=\"col-form-label col-3\">Search By:</label>\n            <div class=\"col-3\">\n                <select class=\"drpSearchBy\" id=\"drpSearchBy\" name=\"SearchBy\" [(ngModel)]=\"searchBy\">\n                    <option value=\"ProjectId\">Project Id</option>\n                    <option value=\"ProjectName\">Project Name</option>\n                    <option value=\"DateOfStart\">Date of Start</option>\n                    <option value=\"TeamSize\">Team Size</option>\n                </select>\n            </div>\n            <label for=\"textSearchText\" class=\"col-form-label col-3\">Search:</label>\n\n            <div class=\"col-4\">\n                <div class=\"input-group\">\n                    <input type=\"text\" class=\"form-control\" id=\"txtSearchText\" name=\"SearchText\" \n                    [(ngModel)]=\"searchText\">\n                    <div class=\"input-group-append\" (click)=\"onSearchClick()\">\n                        <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n        \n    </div>\n    \n    <div class=\"col-xl-9 mx-auto\">\n        <table class=\"table\">\n            <thead>\n                <th>Project Id</th>\n                <th>Project Name</th>\n                <th>Date of Start</th>\n                <th>Team Size</th>\n                <th>Client Location</th>\n                <th>Status</th>\n                <th>Actions</th>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let project of projects; let i = index\" [ngClass]=\"{'text-muted': !project.active}\">\n                    <td>{{project.projectId}}</td>\n                    <td>{{project.projectName}}</td>\n                    <td>{{project.dateOfStart}}</td>\n                    <td>{{project.teamSize}}</td>\n                    <td>{{project.clientLocation.clientLocationName}}</td>\n                    <td>{{project.status}}</td>\n                    <td>\n                        <button class=\"btn btn-info\" (click)=\"onEditClick($event, i)\"\n                        data-toggle=\"modal\" data-target=\"#editModal\">Edit</button>\n                        <button class=\"btn btn-info\" (click)=\"onDeleteClick($event, i)\"\n                        data-toggle=\"modal\" data-target=\"#deleteModal\">Delete</button>\n                    </td>\n                \n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n\n<!--popup-->\n\n<form #newForm=\"ngForm\" novalidate=\"novalidate\">\n    <div class=\"modal\" role=\"dialog\" id=\"newModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\" style=\"width: 700px\">\n                <div class=\"modal-header bg-primary text-white\">\n                    <div class=\"modal-title\">New Project</div>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"form- group row\">\n                        <label for=\"txtNewProjectId\" class=\"col-sm-2 col-form-label\">Project Id</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtNewProjectId\" style=\"width:100px\" class=\"form-control\" \n                            placeholder=\"Project Id\" name=\"ProjectId\" [(ngModel)]=\"newProject.projectId\" \n                            required=\"required\" pattern=\"^[0-9]*$\" #newProjectId=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':newProjectId.invalid && (newProjectId.dirty ||\n                            newProjectId.touched || \n                            newForm.submitted), 'is-valid': newProjectId.valid && \n                            (newProjectId.dirty || newProjectId.touched || newForm.submitted)}\">\n\n                            <span class=\"text-danger\" *ngIf=\"newProjectId.invalid && (newProjectId.dirty \n                            || newProjectId.touched || newForm.submitted) && newProjectId.errors?.required\">\n                            ProjectId can't be empty</span>\n\n                            <span class=\"text-danger\" *ngIf=\"newProjectId.invalid && (newProjectId.dirty \n                            || newProjectId.touched || newForm.submitted) && newProjectId.errors?.pattern\">\n                            ProjectId should contain numbers only</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtNewProjectName\" class=\"col-sm-2 col-form-label\">Project Name</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtNewProjectName\" style=\"width:100px\" class=\"form-control\" \n                            placeholder=\"Project Name\" name=\"ProjectName\" [(ngModel)]=\"newProject.projectName\"\n                            required=\"required\" minlength=\"3\"\n                            maxlength=\"30\" pattern=\"^[A-Za-z0-9 /-]*$\" #newProjectName=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':newProjectName.invalid && (newProjectName.dirty ||\n                             newProjectName.touched || \n                            newForm.submitted), 'is-valid': newProjectName.valid && \n                            (newProjectName.dirty || newProjectName.touched || newForm.submitted)}\">\n\n                            <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty \n                            || newProjectName.touched || newForm.submitted) && newProjectName.errors?.required\">\n                            ProjectName can't be empty</span>\n\n                            <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty \n                            || newProjectName.touched || newForm.submitted) && newProjectName.errors?.pattern\">\n                            ProjectName can contain alphabets, digits,dot, hyphen or space only</span>\n\n                            <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty \n                            || newProjectName.touched || newForm.submitted) && newProjectName.errors?.minlength\">\n                            ProjectName should be at least 3 characters</span>\n\n                        </div>\n                    </div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtNewDateOfStart\" class=\"col-sm-2 col-form-label\">Date Of Start</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtNewDateOfStart\" style=\"width:100px\" class=\"form-control\" \n                            placeholder=\"Date Of Start\" name=\"DateOfStart\" [(ngModel)]=\"newProject.dateOfStart\"\n                            required=\"required\"  #newDateOfStart=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':newDateOfStart.invalid && (newDateOfStart.dirty ||\n                             newDateOfStart.touched || \n                            newForm.submitted), 'is-valid': newDateOfStart.valid && \n                            (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted)}\">\n\n\n                            <span class=\"text-danger\" *ngIf=\"newDateOfStart.invalid && (newDateOfStart.dirty \n                            || newDateOfStart.touched || newForm.submitted) && newDateOfStart.errors?.required\">\n                            DateOfStart can't be empty</span>\n\n                        </div>\n                    </div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtTeamSize\" class=\"col-sm-2 col-form-label\">Team Size</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtTeamSize\" style=\"width:100px\" class=\"form-control\"\n                             placeholder=\"Team Size\" name=\"TeamSize\" [(ngModel)]=\"newProject.teamSize\"\n                             pattern=\"^[0-9]*$\" maxlength=\"7\" appTeamSizeValidator=\"5\" #newTeamSize=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':newTeamSize.invalid && (newTeamSize.dirty ||\n                            newTeamSize.touched || \n                            newForm.submitted), 'is-valid': newTeamSize.valid && \n                            (newTeamSize.dirty || newTeamSize.touched || newForm.submitted)}\">\n\n\n                            <span class=\"text-danger\" *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty \n                            || newTeamSize.touched || newForm.submitted) && newTeamSize.errors?.required\">\n                            Team number should be a number</span>\n\n                            <span class=\"text-danger\" *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty \n                            || newTeamSize.touched || newForm.submitted) && newTeamSize.errors?.divisible\">\n                            Team number should be divisible by 5</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"col-sm-4 col-form-label\"></label>\n                        <div class=\"col-sm-8\">\n                            <div class=\"form-check\">\n                                <input type=\"checkbox\" id=\"chkNewActive\" value=\"true\" class=\"form-check-input\" \n                                [(ngModel)]=\"newProject.active\" name=\"active\">\n                                <label class=\"form-check-label\" for=\"chkNewActive\">Active</label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"for-group row\">\n                        <label for=\"rbNewStatusInForce\" class=\"col-sm-4\">Status</label>\n                        <div class=\"col-sm-8\">\n\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"radio\" id=\"rbNewStatusInForce\" value=\"In Force\" \n                                class=\"form-check-input\"\n                                name=\"Status\" [(ngModel)]=\"newProject.status\" required=\"required\"\n                                 #newStatusInForce=\"ngModel\">\n                                <label for=\"rbNewStatusInForce\" class=\"form-check-label\">In Force</label>\n                            </div>\n\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"radio\" id=\"rbNewStatusSupport\" value=\"Support\"\n                                 class=\"form-check-input\"\n                                name=\"Status\" [(ngModel)]=\"newProject.status\" required=\"required\"\n                                #newStatusSupport=\"ngModel\">\n                                <label for=\"rbNewStatusSupport\" class=\"form-check-label\">Support</label>\n                            </div>\n\n                            <span class=\"text-danger\" *ngIf=\"newStatusInForce.invalid && (newStatusInForce.dirty \n                            || newStatusInForce.touched || newForm.submitted) && newStatusInForce.errors?.required\">\n                            Please select status</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"drpNewClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n                        <div class=\"col-sm-8\">\n                            <select id=\"drpNewClientLocation\" class=\"form-control\" name=\"ClientLocation\"\n                                [(ngModel)]=\"newProject.clientLocationId\"\n                                required=\"required\" pattern=\"^[0-9]*$\" #newClientLocationId=\"ngModel\" \n                                [ngClass]=\"{'is-invalid':newClientLocationId.invalid && (newClientLocationId.dirty ||\n                                newClientLocationId.touched || \n                                newForm.submitted), 'is-valid': newClientLocationId.valid && \n                                (newClientLocationId.dirty || newClientLocationId.touched || newForm.submitted)}\">\n                                <option value=\"null\">Please Select</option>\n                                <option *ngFor=\"let clientLocation of clientLocations\" \n                                [value]=\"clientLocation.clientLocationId\"\n                                {{clientLocation.clientLocation.Name}}\n                                ></option>\n                            </select>\n\n                            <span class=\"text-danger\"\n                            *ngIf=\"newClientLocationId.invalid && (newClientLocationId.dirty ||\n                            newClientLocationId.touched || newForm.submitted) && newClientLocationId.errors?.required\">\n                            Please Client Location</span>\n                        </div>\n                    </div>\n\n                </div>\n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-warning\" data-dismiss=\"modal\"\n                    id=\"newFormCancel\">Cancel</button>\n                    <button class=\"btn btn-success\"  (click)=\"onSaveClick()\">Save</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n<!--Edit Project-->\n\n<form #editForm=\"ngForm\" novalidate=\"novalidate\">\n    <div class=\"modal\" role=\"dialog\" id=\"editModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <div class=\"modal-title\">Edit Project</div>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"form- group row\">\n                        <label for=\"txtEditProjectId\" class=\"col-sm-2 col-form-label\">Project Id</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtEditProjectId\" style=\"width:100px\"\n                             class=\"form-control-plain-text\" \n                            placeholder=\"Project Id\" name=\"ProjectId\" [(ngModel)]=\"editProject.projectId\"\n                            disabled=\"disabled\"\n                            required=\"required\" pattern=\"^[0-9]*$\" #editProjectId=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':editProjectId.invalid && (editProjectId.dirty ||\n                            editProjectId.touched || \n                            editForm.submitted), 'is-valid': editProjectId.valid && \n                            (editProjectId.dirty || editProjectId.touched || editForm.submitted)}\">\n\n                            <span class=\"text-danger\" *ngIf=\"editProjectId.invalid && (editProjectId.dirty \n                            || editProjectId.touched || editForm.submitted) && editProjectId.errors?.required\">\n                            ProjectId can't be empty</span>\n\n                            <span class=\"text-danger\" *ngIf=\"editProjectId.invalid && (editProjectId.dirty \n                            || editProjectId.touched || editForm.submitted) && editProjectId.errors?.pattern\">\n                            ProjectId should contain numbers only</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtEditProjectName\" class=\"col-sm-2 col-form-label\">Project Name</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtEditProjectName\" style=\"width:100px\" class=\"form-control\" \n                            placeholder=\"Project Name\" \n                            name=\"ProjectName\" [(ngModel)]=\"editProject.projectName\"\n                            required=\"required\" minlength=\"3\"\n                            maxlength=\"30\" pattern=\"^[A-Za-z0-9 /-]*$\" #editProjectName=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':editProjectName.invalid && (editProjectName.dirty ||\n                            editProjectName.touched || \n                            editForm.submitted), 'is-valid': editProjectName.valid && \n                            (editProjectName.dirty || editProjectName.touched || editForm.submitted)}\">\n\n                            <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty \n                            || editProjectName.touched || editForm.submitted) && editProjectName.errors?.required\">\n                            ProjectName can't be empty</span>\n\n                            <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty \n                            || editProjectName.touched || editForm.submitted) && editProjectName.errors?.pattern\">\n                            ProjectName can contain alphabets, digits,dot, hyphen or space only</span>\n\n                            <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty \n                            || editProjectName.touched || editForm.submitted) && editProjectName.errors?.minlength\">\n                            ProjectName should be at least 3 characters</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtEditDateOfStart\" class=\"col-sm-2 col-form-label\">Date Of Start</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtEditDateOfStart\" style=\"width:100px\" class=\"form-control\"\n                             placeholder=\"Date Of Start\" name=\"DateOfStart\" [(ngModel)]=\"editProject.dateOfStart\"\n                             required=\"required\"  #editDateOfStart=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':editDateOfStart.invalid && (editDateOfStart.dirty ||\n                            editDateOfStart.touched || \n                            editForm.submitted), 'is-valid': editDateOfStart.valid && \n                            (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted)}\">\n\n                            <span class=\"text-danger\" *ngIf=\"editDateOfStart.invalid && (editDateOfStart.dirty \n                            || editDateOfStart.touched || editForm.submitted) && editDateOfStart.errors?.required\">\n                            DateOfStart can't be empty</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtEditTeamSize\" class=\"col-sm-2 col-form-label\">Team Size</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtEditTeamSize\" style=\"width:100px\" class=\"form-control\" \n                            placeholder=\"Team Size\" name=\"TeamSize\" [(ngModel)]=\"editProject.teamSize\"\n                            pattern=\"^[0-9]*$\" maxlength=\"7\" appTeamSizeValidator=\"5\" #editTeamSize=\"ngModel\" \n                            [ngClass]=\"{'is-invalid':editTeamSize.invalid && (editTeamSize.dirty ||\n                            editTeamSize.touched || \n                            editForm.submitted), 'is-valid': editTeamSize.valid && \n                            (editTeamSize.dirty || editTeamSize.touched || editForm.submitted)}\">\n\n                            <span class=\"text-danger\" *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty \n                            || editTeamSize.touched || editForm.submitted) && editTeamSize.errors?.required\">\n                            Team number should be a number</span>\n\n                            <span class=\"text-danger\" *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty \n                            || editTeamSize.touched || newForm.submitted) && editTeamSize.errors?.divisible\">\n                            Team number should be divisible by 5</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"col-sm-4 col-form-label\"></label>\n                        <div class=\"col-sm-8\">\n                            <div class=\"form-check\">\n                                <input type=\"checkbox\" id=\"chkEditActive\" value=\"true\" class=\"form-check-input\" \n                                [(ngModel)]=\"editProject.active\" name=\"active\">\n                                <label class=\"form-check-label\" for=\"chkEditActive\">Active</label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"for-group row\">\n                        <label for=\"rbEditStatusInForce\" class=\"col-sm-4\">Status</label>\n                        <div class=\"col-sm-8\">\n\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"radio\" id=\"rbEditStatusInForce\" value=\"In Force\" \n                                class=\"form-check-input\"\n                                name=\"Status\" [(ngModel)]=\"editProject.status\"\n                                required=\"required\"\n                                 #editStatusInForce=\"ngModel\">\n                                <label for=\"rbEditStatusInForce\" class=\"form-check-label\">In Force</label>\n                            </div>\n\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"radio\" id=\"rbEditStatusSupport\" value=\"Support\" \n                                class=\"form-check-input\"\n                                name=\"Status\" [(ngModel)]=\"editProject.status\"\n                                required=\"required\"\n                                #editStatusSupport=\"ngModel\">\n                                <label for=\"rbEditStatusSupport\" class=\"form-check-label\">Support</label>\n                            </div>\n\n                            <span class=\"text-danger\" *ngIf=\"editStatusInForce.invalid && (editStatusInForce.dirty \n                            || editStatusInForce.touched || editForm.submitted) && editStatusInForce.errors?.required\">\n                            Please select status</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"drpEditClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n                        <div class=\"col-sm-8\">\n                            <select id=\"drpEditClientLocation\" class=\"form-control\" name=\"clientLocation\"\n                                [(ngModel)]=\"editProject.clientLocationId\"\n                                required=\"required\" pattern=\"^[0-9]*$\" #editClientLocationId=\"ngModel\" \n                                [ngClass]=\"{'is-invalid':editClientLocationId.invalid && (editClientLocationId.dirty ||\n                                editClientLocationId.touched || \n                                editForm.submitted), 'is-valid': editClientLocationId.valid && \n                                (editClientLocationId.dirty || editClientLocationId.touched || editForm.submitted)}\">\n                                <option value=\"null\">Please Select</option>\n                                <option *ngFor=\"let clientLocation of clientLocations\" \n                                [value]=\"clientLocation.clientLocationId\"\n                                {{clientLocation.clientLocation.Name}}></option>\n                            </select>\n\n                            <span class=\"text-danger\"\n                            *ngIf=\"editClientLocationId.invalid && (editClientLocationId.dirty ||\n                            editClientLocationId.touched || editForm.submitted) && editClientLocationId.errors?.required\">\n                            Please Client Location</span>\n                        </div>\n                    </div>\n\n                </div>\n                \n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"editFormCancel\">Cancel</button>\n                    <button class=\"btn btn-success\"  (click)=\"onUpdateClick()\">Update</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n\n<!--Delete Project-->\n\n<form>\n    <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <div class=\"modal-title\">Delete Project</div>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n                </div>\n\n                <div class=\"modal-body\">\n\n                    <div class=\"text-warning\">Are you sure you want to delete this Project?</div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtDeleteProjectId\" class=\"col-sm-2 col-form-label\">Project Id</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtDeleteProjectId\" style=\"width:100px\"\n                             class=\"form-control-plain-text\" \n                            placeholder=\"Project Id\" name=\"ProjectId\" [(ngModel)]=\"deleteProject.projectId\"\n                            disabled=\"disabled\">\n\n                        </div>\n                    </div>\n\n                    <div class=\"form- group row\">\n                        <label for=\"txtDeleteProjectName\" class=\"col-sm-2 col-form-label\">Project Name</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" id=\"txtDeleteProjectName\" style=\"width:100px\" class=\"form-control\" \n                            placeholder=\"Project Name\" \n                            name=\"ProjectName\" [(ngModel)]=\"deleteProject.projectName\" disabled=\"disabled\">\n\n                        </div>\n                    </div>\n\n                    \n                </div>\n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-warning\" data-dismiss=\"modal\">Cancel</button>\n                    <button class=\"btn btn-success\"  (click)=\"onDeleteConfirmClick()\">Delete</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\nimport { AboutComponent } from './admin/about/about.component';\nimport { ProjectsComponent} from './admin/projects/projects.component';\nimport { LoginComponent } from './login/login.component';\nimport { CanActivateGuardService } from './can-activate-guard.service';\n\nconst routes: Routes = [\n  {path:\"\", redirectTo:\"login\", pathMatch:\"full\"},\n  {path: \"login\", component: LoginComponent},\n  {path:\"dashboard\", component: DashboardComponent, canActivate: [CanActivateGuardService], data: {expectedRole: \"admin\"}},\n  {path:\"about\", component: AboutComponent},\n  {path: \"projects\", component: ProjectsComponent, canActivate: [CanActivateGuardService], data: {expectedRole: \"admin\"}}\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(public loginService: LoginService, private domSanitizer : DomSanitizer){\n\n  }\n\n  onSearchClick(){\n    console.log(this.loginService.currentUserName);\n  }\n}\n","<nav class= \"navbar  bg-success navbar-dark\">\n  <a class=\"navbar-brand\" href=\"#\">\n    VehicleManagement\n  </a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mynav\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"mynav\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName !=null\">\n        <a class=\"nav-link\" routerLink=\"dashboard\">Dashboard</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"about\">About</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName !=null\">\n        <a class=\"nav-link\" routerLink=\"projects\">Projects</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName !=null\">\n        <a class=\"nav-link\" href=\"#\">{{loginService.currentUserName}}</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName !=null\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"loginService.Logout()\">Logout</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName ==null\">\n        <a class=\"nav-link\" routerLink=\"login\">Login</a>\n      </li>\n      \n      \n    </ul>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"search\"><i class=\"fa fa-search\"></i></span>\n        </div>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n      </div>\n      <button class=\"btn btn-warning my2-my-sm-o\" type=\"button\">Search</button>\n    </form>\n  </div>\n</nav>\n\n<div class=\"container-fluid\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {JwtModule} from \"@auth0/angular-jwt\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdminModule } from './admin/admin.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { JwtInterceptorService } from './jwt-interceptor.service';\nimport { JwtUnAuthorizedInterceptorService } from './jwt-un-authorized-interceptor.service';\nimport { LoginComponent } from './login/login.component';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    \n    \n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AdminModule,\n    HttpClientModule,\n    FormsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter:()=>{\n          return (sessionStorage.getItem(\"currentUser\")?JSON.parse(sessionStorage.getItem(\"currentUser\")).token : null)\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptorService,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS, \n      useClass: JwtUnAuthorizedInterceptorService,\n      multi:true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivateGuardService implements CanActivate{\n\n  constructor(private loginService : LoginService, private router:Router, private jwtHelperService: JwtHelperService)\n   { \n\n   }\n\n  canActivate(route:ActivatedRouteSnapshot): boolean{\n    var token = sessionStorage.getItem(\"currentUser\")?JSON.parse(sessionStorage.getItem(\"currentUser\")).token : null;\n    if (this.loginService.isAuthenticated() && this.jwtHelperService.decodeToken(token).role==route.data.expectedRole){\n      return true;\n    }\n    else{\n      this.router.navigate([\"login\"]);\n      return false;\n    }\n  }\n}\n","export class ClientLocation {\n\n    clientLocationId:number;\n    clientLocationName:string;\n\n    constructor(){\n        this.clientLocationId = null;\n        this.clientLocationName = null;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ClientLocation } from './client-location';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientLocationsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getClientLocations():Observable<ClientLocation[]>{\n    return this.httpClient.get<ClientLocation[]>(\"/api/clientlocations\", {responseType: \"json\"});\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DashboardService {\n\n  getTeamMemberSummary():any[]\n  {\n    var TeamMembersSummary=[\n      {Region: \"East\", TeamMembersCount:20, TemporarilyUnavailableMembers: 4},\n      {Region: \"West\", TeamMembersCount:15, TemporarilyUnavailableMembers: 8},\n      {Region: \"South\", TeamMembersCount:17, TemporarilyUnavailableMembers: 1},\n      {Region: \"North\", TeamMembersCount:15, TemporarilyUnavailableMembers: 6}\n    ];\n    return TeamMembersSummary;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptorService implements HttpInterceptor {\n\n  constructor() { }\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n  {\n    var currentUser = {token:\"\"};\n    if(sessionStorage.currentUser !=null){\n      currentUser= JSON.parse(sessionStorage.currentUser);\n      }\n    request = request.clone({\n      setHeaders:{\n        Authorization: \"Bearer\" + currentUser.token\n      }\n    });\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpEventType, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtUnAuthorizedInterceptorService implements HttpInterceptor{\n\n  constructor() { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n  {\n    return next.handle(request).pipe(tap(\n      (event: HttpEvent<any>)=>\n      {\n        if(event instanceof HttpResponse)\n        {\n\n        }\n      },\n\n      (error : any)=>\n      {\n        if (error instanceof HttpErrorResponse)\n        {\n          if(error.status == 401){\n            console.log(error);\n            alert(\"401 UnAuthorized\");\n          }\n        }\n      }\n    ));\n\n  }\n}\n","export class LoginViewModel {\n    UserName: string;\n    Password: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpBackend } from '@angular/common/http';\nimport { LoginViewModel } from './login-view-model';\nimport { Observable } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {JwtHelperService} from \"@auth0/angular-jwt\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private httpClient : HttpClient;\n  constructor(private httpBackend: HttpBackend, private jwtHelperService : JwtHelperService) \n  {\n\n  }\n  currentUserName: string = null;\n\n  public Login(loginViewModel: LoginViewModel): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/authenticate\", loginViewModel, {responseType: \"json\", observe:\"response\"})\n    .pipe(map(response =>{\n      if (response){\n        this.currentUserName = response.body.UserName;\n        sessionStorage.currentUser = JSON.stringify(response.body);\n        sessionStorage.XSRFRequestToken = response.headers.get(\"XSRF-REQUEST-TOKEN\")\n      }\n      return response.body;\n    }))\n  }\n\n  public Logout(){\n    sessionStorage.removeItem(\"currentUser\");\n    this.currentUserName = null;\n  }\n\n  public isAuthenticated(): boolean{\n    var token = sessionStorage.getItem(\"currentUser\")?JSON.parse(sessionStorage.getItem(\"currentUser\")).token : null;\n    if(this.jwtHelperService.isTokenExpired())\n    {\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginViewModel } from '../login-view-model';\nimport { LoginService } from '../login.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginViewModel: LoginViewModel = new LoginViewModel();\n  loginError: string=\"\";\n\n  constructor(public loginService: LoginService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginClick(event){\n    this.loginService.Login(this.loginViewModel).subscribe(\n      (response)=>{\n        this.router.navigateByUrl(\"/dashboard\");\n      },\n      (error)=>{\n        console.log(error);\n        this.loginError = \"Invalid Username or Password\";\n      },\n    );\n  }\n\n}\n","<form>\n    <div class=\"row\">\n        <div class=\"col-lg-6 col-xl-5 col-md-9 mx-auto\">\n            <div class=\"card mt-4\">\n                <div class=\"card-header bg-secondary text-white\">\n                    <h3>Login</h3>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"form-group form-row\">\n                        <label for=\"UserName\" class=\"col-md-4 col-form-label\">Username</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Username\"\n                             [(ngModel)]=\"loginViewModel.UserName\" name=\"UserName\" autofocus=\"autofocus\">\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"Password\" class=\"col-md-4 col-form-label\">Password</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"password\" class=\"form-control\" placeholder=\"Password\"\n                             [(ngModel)]=\"loginViewModel.Password\" name=\"Password\" >\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer text-right\">\n                    <span class=\"text-danger\">{{loginError}}&nbsp;</span>\n                    <button class=\"btn btn-primary\" (click)=\"onLoginClick($event)\">Login</button>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</form>>\n","import { ClientLocation } from './client-location';\n\nexport class Project \n{\n    projectId: number;\n    projectName: string;\n    dateOfStart: string;\n    teamSize: number;\n    active:boolean;\n    status: string;\n    clientLocationId : number;\n    clientLocation: ClientLocation;\n\n    constructor()\n    {\n        this.projectId=0;\n        this.projectName=null;\n        this.dateOfStart=null;\n        this.teamSize=0;\n        this.active = true;\n        this.status = null;\n        this.clientLocationId = null;\n        this.clientLocation = new ClientLocation();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { Project } from './project';\nimport { map } from \"rxjs/operators\";\nimport { Session } from 'protractor';\nimport { request } from 'http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n\n  constructor(private httpClient: HttpClient) \n  {\n\n   }\n\n   getAllProjects():Observable<Project[]>\n   {\n    \n     \n\n\n     return this.httpClient.get<Project[]>(\"/api/projects\", {responseType:\"json\"})\n     .pipe(map(\n       (data: Project[])=>{\n        for(let i = 0; i < data.length; i++){\n          //data[i].teamSize = data[i].teamSize * 100;\n        }\n        return data;\n      }\n      ));\n   }\n\n   insertProject(newProject : Project) : Observable<Project>{\n     return this.httpClient.post<Project>(\"/api/projects\", newProject, {responseType:\"json\"});\n   }\n\n   updateProject(existingProject : Project) : Observable<Project>{\n    return this.httpClient.put<Project>(\"/api/projects\", existingProject, {responseType:\"json\"});\n  }\n\n   deleteProject(ProjectId : number) : Observable<string>{\n    return this.httpClient.delete<string>(\"/api/projects?ProjectId=\" + ProjectId);\n  }\n\n  searchProjects(searchBy: string, searchText: string):Observable<Project[]>\n   {\n     return this.httpClient.get<Project[]>(\"/api/projects/search/\" + searchBy +\"/\" + searchText, {responseType:\"json\"});\n   }\n}\n","import { Directive, Input } from '@angular/core';\nimport { Validator, AbstractControl, ValidationErrors, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[appTeamSizeValidator]',\n  providers: [{provide: NG_VALIDATORS, useExisting: TeamSizeValidatorDirective, multi: true}]\n})\nexport class TeamSizeValidatorDirective implements Validator {\n\n  constructor() { }\n\n  @Input(\"appTeamSizeValidator\") n:number;\n  validate(control: AbstractControl):ValidationErrors | null\n  {\n    let currentValue=control.value;\n    let isValid = currentValue % this.n == 0;\n    if(isValid){\n      return null;\n    }\n    else{\n      return {divisible: {valid:false}};\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}